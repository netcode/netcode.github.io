<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security on Netcode - A developer journey</title>
    <link>http://localhost:1313/categories/security/</link>
    <description>Recent content in security on Netcode - A developer journey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Feb 2017 15:43:48 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Exploit database error to leak users data ( Error based sql injection )</title>
      <link>http://localhost:1313/post/exploit-error-based-sqli/</link>
      <pubDate>Mon, 20 Feb 2017 15:43:48 +0800</pubDate>
      
      <guid>http://localhost:1313/post/exploit-error-based-sqli/</guid>
      <description>Hi everybody I don’t post much write-ups online because most of the work done privately and under NDA.
But this time i decided to publish this (anonymously after website owner agreed ) because too many developers insists that you can’t exploit complicated SQL , or non result SQL (example: count(*) sql).
 Note: You can automate everything in this article using SQLMap, but i choose to exploit it manually to explain under the hood proccess.</description>
    </item>
    
  </channel>
</rss>